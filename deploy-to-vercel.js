#!/usr/bin/env node

/**
 * Vercel deployment helper script
 *
 * This script helps prepare and execute the deployment of the Todo app to Vercel.
 * It ensures all environment variables are properly set up.
 */

import { execSync } from 'child_process';
import { existsSync, readFileSync } from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import readline from 'readline';
import dotenv from 'dotenv';

// Setup paths
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const envPath = path.join(__dirname, '.env');

// Load environment variables
dotenv.config({ path: envPath });

// Create readline interface
const rl = readline.createInterface({
	input: process.stdin,
	output: process.stdout
});

// Ask for confirmation
function askQuestion(question) {
	return new Promise((resolve) => {
		rl.question(question, (answer) => {
			resolve(answer);
		});
	});
}

// Main function
async function deploy() {
	console.log('🚀 Preparing to deploy to Vercel...');

	// Check if .env file exists
	if (!existsSync(envPath)) {
		console.error(
			'❌ No .env file found! Please create one first with your MongoDB connection and other settings.'
		);
		process.exit(1);
	}

	// Check if key environment variables are set
	if (!process.env.MONGO_URI) {
		console.error('❌ MONGO_URI is not set in your .env file. Please set it before deploying.');
		process.exit(1);
	}

	if (!process.env.JWT_SECRET) {
		console.warn(
			'⚠️ JWT_SECRET is not set in your .env file. A random one will be generated by Vercel.'
		);
	}

	console.log('✅ Environment variables validated');

	// Build the app locally to ensure it works
	console.log('🔨 Building the app locally...');
	try {
		execSync('npm run build', { stdio: 'inherit' });
	} catch (error) {
		console.error('❌ Build failed! Fix the errors before deploying.');
		process.exit(1);
	}

	console.log('✅ Build successful!');

	// Ask for confirmation
	const answer = await askQuestion('Are you ready to deploy to Vercel? (y/n): ');
	if (answer.toLowerCase() !== 'y') {
		console.log('Deployment canceled.');
		rl.close();
		return;
	}

	// Check if logged in to Vercel
	try {
		execSync('vercel whoami', { stdio: 'pipe' });
	} catch (error) {
		console.log('📝 You need to log in to Vercel first...');
		try {
			execSync('vercel login', { stdio: 'inherit' });
		} catch (error) {
			console.error('❌ Failed to log in to Vercel. Make sure you have the Vercel CLI installed.');
			rl.close();
			return;
		}
	}

	// Deploy to Vercel
	console.log('🚀 Deploying to Vercel...');
	try {
		// Set environment variables
		console.log('Setting up environment variables...');
		try {
			execSync('vercel pull', { stdio: 'inherit' });
		} catch (error) {
			console.warn('⚠️ Failed to pull environment variables. Continuing...');
		}

		// Deploy
		execSync('vercel deploy --prod', { stdio: 'inherit' });
		console.log('✅ Deployed successfully!');

		// Get the deployed URL
		const deployedUrl = execSync('vercel domains ls').toString().trim();
		console.log(`🌐 Your app is deployed and should be available soon at: ${deployedUrl}`);

		console.log(
			'\n📝 IMPORTANT: Make sure you set up all your environment variables in the Vercel dashboard:'
		);
		console.log('- MONGO_URI: Your MongoDB connection string');
		console.log('- JWT_SECRET: A secure secret key for JWT tokens');
		console.log("- SOCKET_SERVER_URL: Your app's URL (e.g., https://your-app.vercel.app)");
		console.log('- Add any other environment variables your app needs\n');
	} catch (error) {
		console.error('❌ Deployment failed:', error.message);
	}

	rl.close();
}

// Execute the deploy function
deploy().catch((error) => {
	console.error('Deployment error:', error);
	process.exit(1);
});
