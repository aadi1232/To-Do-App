import{t as y,B as p,K as h,Z as m,av as _,R as g,a9 as T,aw as j,ax as E,I as b,J as c}from"./PWWI3Ue3.js";import{f as w,g as v}from"./BC15lkC2.js";function F(o,e,t=!1,a=!1,l=!1){var f=o,d="";y(()=>{var n=m;if(d===(d=e()??"")){p&&h();return}if(n.nodes_start!==null&&(_(n.nodes_start,n.nodes_end),n.nodes_start=n.nodes_end=null),d!==""){if(p){g.data;for(var s=h(),u=s;s!==null&&(s.nodeType!==8||s.data!=="");)u=s,s=T(s);if(s===null)throw j(),E;w(g,u),f=b(s);return}var i=d+"";t?i=`<svg>${i}</svg>`:a&&(i=`<math>${i}</math>`);var r=v(i);if((t||a)&&(r=c(r)),w(c(r),r.lastChild),t||a)for(;c(r);)f.before(c(r));else f.before(r)}})}async function S(){const o=await fetch("/api/todos",{credentials:"include"});if(!o.ok){const t=await o.json();throw new Error(t.message||"Failed to fetch todos")}return await o.json()}async function $(o){const e=await fetch("/api/todos",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(o)});if(!e.ok){const t=await e.json();throw new Error(t.message||"Failed to create todo")}return e.json()}async function N(o,e){const t=await fetch(`/api/todos/${o}`,{method:"PUT",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(e)});if(!t.ok){const a=await t.json();throw new Error(a.message||"Failed to update todo")}return t.json()}async function C(o){const e=await fetch(`/api/todos/${o}`,{method:"DELETE",credentials:"include"});if(!e.ok){const t=await e.json();throw new Error(t.message||"Failed to delete todo")}}async function J(o){const e=await fetch(`/api/todos/by-group/${o}`,{credentials:"include"});if(!e.ok){const a=await e.json();throw new Error(a.message||"Failed to fetch group todos")}return await e.json()}async function P(o,e,t){const a=await fetch(`/api/todos/by-group/${o}`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({...e,groupName:""})});if(!a.ok){const l=await a.json();throw new Error(l.message||"Failed to create group todo")}return a.json()}async function R(o,e){const t=await fetch(`/api/todos/by-id/${o}`,{method:"PUT",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(e)});if(!t.ok){const a=await t.json();throw new Error(a.message||"Failed to update group todo")}return t.json()}async function G(o){const e=await fetch(`/api/todos/by-id/${o}`,{method:"DELETE",credentials:"include"});if(!e.ok){const t=await e.json();throw new Error(t.message||"Failed to delete group todo")}}async function D(o){try{if(!o||o.trim().length<2)return[];const e=await fetch("/api/ai/suggest",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({input:o})});if(!e.ok)throw new Error(`Error fetching suggestions: ${e.status}`);return(await e.json()).suggestions||[]}catch(e){return console.error("Failed to get suggestions:",e),[]}}export{D as a,C as b,P as c,G as d,N as e,$ as f,J as g,F as h,S as i,R as u};
